#!/bin/bash
# ----------------------------------------------------------------------
#    Copyright (c) 2014
#
#    This program is free software; you can redistribute it and/or
#    modify it under the terms of version 3 of the GNU General Public
#    License published by the Free Software Foundation.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
# ----------------------------------------------------------------------
# Authors:
#  Alex V Kotelnikov (aka gudron) <gudron@gudron.me>
#
# Repository:
#  https://github.com/gudron/vhotsy
#
# /usr/local/bin/vhosty-create

virtualHostsPath=""
databaseType=""
databaseAccessUser=""
databaseAccessPassword=""
databaseHost=""
dataBaseName=""
hostPerUser=false
owner=""

userName=""
containerName=""
homePath=""
rootPath=""

usage() {
	sn=`basename $0`

	echo "USAGE: $sn -c -h <HOST_NAME> -P <PASSWORD> -t <WEB_SERVER_CONFIG_TEMPLATE> -u <DATABASE_USER> -U <PASSWORD_FOR_DATABASE_USER>"
	echo "USAGE: $sn -u --host <HOST_NAME> --database-password <DATABASE_PASSWORD>"	
	echo "USAGE: $sn -d -h <HOST_NAME>"
	echo -e "Options:"
	echo -e "\t-h | --host <HOST_NAME>\tName of virtual host.\tExample: example.dev,example.loc"
	echo -e "\t-P | --password Set password on database and system user"
	echo -e "\t-p | --database-password Set password on database and system user"
	echo -e "\t-t | --template <WEB_SERVER_CONFIG_TEMPLATE>\tName of config template for webserver.\n\tExample: wolfcms,yii,cohana. Full list in https://github.com/gudron/nginxconfy"
	echo -e "\t-j | --jail-roots-path <PATH_TO_VHOSTS_PARENT_DIR>\tPath to parent directory of all virtual hosts. Example: /var/www/"
	echo -e "\t-D | --database-type <DATABASE_TYPE>\tWhat database u want use. Available: mysql"
	echo -e "\t-H | --database-host <DATABASE_SERVER_ADRESS>\tDatabase server name or adress. Example: 127.0.0.1"
	echo -e "\t-u | --database-access-user <USER_NAME_TO_DATABASE_ACCESS>\tUser name who can create databse and grants priveleges. Example: root."
	echo -e "\t-U | --database-access-password <USER_PASSWORD_TO_DATABASE_ACCESS>\tPassword for user who can create database and grants priveleges. Example: superSecredPaswword."
	echo -e "\t--host-pre-user\t Using one host one user structure."
	echo -e "\t--owner\t If not host per user, then using owner of files and folders."
}

printError() {
	echo "[!] Invalid option" && usage && exit 1
}

createJailEnviroment() {
	createHome() {
		homePath="$rootPath"/home
		mkdir "$homePath"
		mkdir "$homePath"/htdocks "$homePath"/docks "$homePath"/.ssh
		touch "$homePath"/.ssh/authorized_keys

		chmod -R 1770 "$homePath"
		chown -R "$userName":"$userName" "$homePath"
		chattr =au "$homePath"
	}

	createEtc() {
		etcPath="$rootPath"/etc
		mkdir "$etcPath"
		mkdir "$etcPath"/ssh
		#add passwd file
		touch "$etcPath"/etc/passwd
		cat /etc/passwd | grep root > "$etcPath"/passwd
		cat /etc/passwd | grep $userName >> "$etcPath"/etc/passwd
		#add group file
		touch "$etcPath"/group
		grep -e ^root /etc/group > "$etcPath"/group
		grep -e ^www-data /etc/group >> "$etcPath"/group
		grep -e ^$VhGroupName /etc/group >> "$etcPath"/group
		grep -e ^$userName /etc/group >> "$etcPath"/group
		#add shadowp file
		touch  "$etcPath"/shadow
		cat /etc/shadow | grep $userName > "$etcPath"/shadow

		cp /etc/host.conf /etc/localtime /etc/nsswitch.conf "$etcPath"
		cp /etc/resolv.conf /etc/shells "$etcPath"
	}

	copyBinFile() {
		echo binFile
	}

	copyOthersFiles() {
		cp -R /usr/share/zoneinfo/* "$VHROOT"/"$hostname"/usr/share/zoneinfo
	}

	rootPath="$virtualHostsPath"/containers/"$userName"
	mkdir -p "$rootPath"
	chown root:root "$rootPath"
	ln -s "$rootPath" "$virtualHostsPath"/"$hostname"
	#creating host config
	touch "$rootPath"/hostconfig.ini
	echo "[main]" 						 > "$rootPath"/hostconfig.ini
	echo "SITE_NAME='$hostname'" 		>> "$rootPath"/hostconfig.ini
	echo "DB_TYPE='$databaseType'" 		>> "$rootPath"/hostconfig.ini
	echo "DB_NAME='$dataBaseName'" 		>> "$rootPath"/hostconfig.ini
	echo "DB_PASS='$databasePassword'" 	>> "$rootPath"/hostconfig.ini

	createHome
	#mkdir -p "$rootPath"/bin "$rootPath"/lib "$rootPath"/usr/bin 
	#mkdir -p "$rootPath"/usr/lib "$rootPath"/usr/share/zoneinfo 
	#mkdir -p "$rootPath"/usr/share/misc 
	#copyOthersFiles
	#createEtc
}

createUser() {
	useradd "$userName \ 
		-d $virtualHostsPath/containers/$userName/home \ 
		-G $VhGroupName \ 
		-s /bin/false \ 
		-p`mkpasswd -m sha-512 $pass`"
	usermod -a -G "$hostname" www-data backup gudron
}

main() {
	# get sha1 hash from hostname;
	# example.com -> 0caaf24ab1a0c33440c06afe99df986365b0781f
	containerName=`echo -n $hostname | openssl sha1 | awk '{print $2}'`
	# get short sha1 hash from hostname, first 7 character;
	# 0caaf24ab1a0c33440c06afe99df986365b0781f -> 0caaf24
	dataBaseName=${containerName::7}
	if hostPerUser;
		then 
		userName=dataBaseName
		createUser
		else 
		userName=owner
	fi

	createJailEnviroment
}

TEMP=`getopt -o h:p:P:t:j:D:H: -l host:,password:,database-password:,template:,jail-roots-path:,database-type:,database-host:,database-access-user:,database-access-password: -n 'vhosty.sh' -- "$@"`

if [ $? != 0 ] ; then printError ; fi

eval set -- "$TEMP"
while true ; do
	case "$1" in
		-h|--host ) 
			hostname="$2" ; shift 2 ;;
		
		-P|--password ) 
			password="$2" ; shift 2 ;;
		
		-p|--database-password ) 
			databasePassword="$2" ; shift 2 ;;
		
		-t|--template )
			hosttpl="$2" ; shift 2 ;;

		-j|--jail-roots-path )
			virtualHostsPath="$2" ; shift 2 ;;

		-D|--database-type )
			databaseType="$2" ; shift 2 ;;
		
		-H|--database-host )
			databaseHost="$2" ; shift 2 ;;			
		
		-u|--database-access-user )
			databaseAccessUser="$2" ; shift 2 ;;

		-U|--database-access-password )
			databaseAccessPassword="$2" ; shift 2 ;;

		--host-pre-user ) hostPerUser=true; shift ;;

		--owner )
			owner="$2"; shift 2 ;;

		-- ) shift ; break ;;
		* ) printError;;
	esac
done

if [ "$hostname" != "" ]
then
	main
else
	printError
fi

exit 0